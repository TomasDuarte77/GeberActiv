{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DuaTo\\\\Downloads\\\\Geberactiv-main1\\\\src\\\\components\\\\importar\\\\index.js\",\n  _s = $RefreshSig$();\nimport * as XLSX from 'xlsx';\nimport { useState } from 'react';\nimport '../importar/ajuda.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Importar({\n  setExcelData,\n  setDataToFilter,\n  setExcelTableData,\n  showMessage,\n  setTotalEntries\n}) {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false); // Controle do pop-up\n\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      readExcel(file);\n    }\n  };\n  const readExcel = file => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = e.target.result;\n      const workbook = XLSX.read(data, {\n        type: 'binary'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(sheet, {\n        header: 1\n      });\n      jsonData.shift();\n      let defineLegicKey = jsonData.reduce((acc, current) => {\n        return {\n          ...acc,\n          [current[2]]: current\n        };\n      }, {});\n      let formatToFilter = jsonData.reduce((acc, current) => {\n        return {\n          ...acc,\n          [current[0]]: current\n        };\n      }, {});\n      setTotalEntries(jsonData.length);\n      localStorage.setItem('gactiveImportedData', JSON.stringify(jsonData));\n      setExcelData(defineLegicKey);\n      setDataToFilter(formatToFilter);\n      setExcelTableData(true);\n      showMessage(\"Ficheiro importado com sucesso!\");\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  // Função para abrir e fechar o modal\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"files-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Importar Ficheiros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: openModal,\n      className: \"fa fa-question-circle open-modal-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ajuda Importa\\xE7\\xE3o de Ficheiro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"ajuda.png\",\n          alt: \"Imagem de Ajuda\",\n          className: \"help-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"- Aqui podes importar um ficheiro Excel contendo os c\\xF3digos de barras ou Legic!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"- Lembra-te de que o ficheiro deve estar no formato correto para ser lido com sucesso!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"close-modal-button\",\n          children: \"Fechar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Importar, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = Importar;\nexport default Importar;\nvar _c;\n$RefreshReg$(_c, \"Importar\");","map":{"version":3,"names":["XLSX","useState","jsxDEV","_jsxDEV","Importar","setExcelData","setDataToFilter","setExcelTableData","showMessage","setTotalEntries","_s","isModalOpen","setIsModalOpen","handleFileUpload","e","file","target","files","readExcel","reader","FileReader","onload","data","result","workbook","read","type","sheetName","SheetNames","sheet","Sheets","jsonData","utils","sheet_to_json","header","shift","defineLegicKey","reduce","acc","current","formatToFilter","length","localStorage","setItem","JSON","stringify","readAsBinaryString","openModal","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/DuaTo/Downloads/Geberactiv-main1/src/components/importar/index.js"],"sourcesContent":["import * as XLSX from 'xlsx';\r\nimport { useState } from 'react';\r\nimport '../importar/ajuda.png'\r\nfunction Importar({ setExcelData, setDataToFilter, setExcelTableData, showMessage, setTotalEntries }) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Controle do pop-up\r\n\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      readExcel(file);\r\n    }\r\n  };\r\n\r\n  const readExcel = (file) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n      const data = e.target.result;\r\n      const workbook = XLSX.read(data, { type: 'binary' });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const sheet = workbook.Sheets[sheetName];\r\n\r\n      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n      jsonData.shift();\r\n\r\n      let defineLegicKey = jsonData.reduce((acc, current) => {\r\n        return { ...acc, [current[2]]: current };\r\n      }, {});\r\n\r\n      let formatToFilter = jsonData.reduce((acc, current) => {\r\n        return { ...acc, [current[0]]: current };\r\n      }, {});\r\n      setTotalEntries(jsonData.length);\r\n\r\n      localStorage.setItem('gactiveImportedData', JSON.stringify(jsonData));\r\n      setExcelData(defineLegicKey);\r\n      setDataToFilter(formatToFilter);\r\n      setExcelTableData(true);\r\n      showMessage(\"Ficheiro importado com sucesso!\");\r\n    };\r\n\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  // Função para abrir e fechar o modal\r\n  const openModal = () => setIsModalOpen(true);\r\n  const closeModal = () => setIsModalOpen(false);\r\n\r\n  return (\r\n    <section className='files-management-container'>\r\n      <p>Importar Ficheiros</p>\r\n      <input type='file' onChange={handleFileUpload} />\r\n\r\n      {/* Ícone de interrogação para abrir o pop-up */}\r\n      <i onClick={openModal} className=\"fa fa-question-circle open-modal-icon\" />\r\n\r\n      {/* Pop-up (Modal) */}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h2>Ajuda Importação de Ficheiro</h2>\r\n            <img \r\n              src=\"ajuda.png\" \r\n              alt=\"Imagem de Ajuda\"\r\n              className=\"help-image\"\r\n            />\r\n            <p>- Aqui podes importar um ficheiro Excel contendo os códigos de barras ou Legic!</p>\r\n            <p>- Lembra-te de que o ficheiro deve estar no formato correto para ser lido com sucesso!</p>\r\n            <button onClick={closeModal} className=\"close-modal-button\">\r\n              Fechar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Importar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}