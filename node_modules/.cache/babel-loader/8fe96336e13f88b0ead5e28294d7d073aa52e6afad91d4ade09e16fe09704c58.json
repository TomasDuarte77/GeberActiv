{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DuaTo\\\\Downloads\\\\Geberactiv-main1\\\\src\\\\components\\\\barcode\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Barcode() {\n  _s();\n  const [excelData, setExcelData] = useState(null);\n  const [inputBarcode, setInputBarcode] = useState('');\n  const [legicDB, setLegicDB] = useState([]);\n  const [registeredLegicData, setRegisteredLegicData] = useState(true);\n  const [exportButtonDisplay, setExportButtonDisplay] = useState(false);\n  useEffect(() => {\n    checkDb();\n  }, []);\n  function checkDb() {\n    let getLocalStorage = localStorage.getItem('gactiveLegicReadData');\n    if (getLocalStorage) {\n      setExportButtonDisplay(true);\n    }\n  }\n  function handleBarcodeInput(barcode) {\n    if (excelData !== null) {\n      let userData = excelData[barcode];\n      if (userData !== undefined && userData !== null) {\n        let doubleVerify = legicDB.filter(data => data[2] === barcode);\n        if (doubleVerify.length > 0) {\n          alert('Este utilizador já foi registado');\n          setInputBarcode('');\n        } else {\n          const legicDBCopy = [...legicDB];\n          legicDBCopy.push(userData);\n          setLegicDB(legicDBCopy);\n          setRegisteredLegicData(true);\n          localStorage.setItem('gactiveLegicReadData', JSON.stringify(legicDBCopy));\n          let getJsonArray = localStorage.getItem('gactiveImportedData');\n          let jsonConvert = JSON.parse(getJsonArray);\n          let formatJson = jsonConvert.reduce((acc, current) => {\n            return {\n              ...acc,\n              ...{\n                [current[2]]: current\n              }\n            };\n          }, {});\n          let getUserToStatus = formatJson[barcode];\n          delete jsonConvert[barcode];\n          getUserToStatus.push('check_circle');\n          const legicStatus = [...jsonConvert];\n          localStorage.setItem('gactiveImportedData', JSON.stringify(legicStatus));\n          checkDb();\n          setInputBarcode('');\n        }\n      } else {\n        alert('Este código de barras não existe');\n        setInputBarcode('');\n      }\n    } else {\n      alert('Importe um ficheiro');\n      setInputBarcode('');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"legic-number-input\",\n      type: \"number\",\n      placeholder: \"Legic\",\n      onChange: e => setInputLegic(e.target.value),\n      value: inputLegic,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Introduza o seu C\\xF3digo de Barras\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"barcode-input\",\n      type: \"number\",\n      placeholder: \"C\\xF3digo de Barras\",\n      onChange: e => setInputBarcode(e.target.value),\n      value: inputBarcode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"confirm-button\",\n      onClick: handleConfirm,\n      children: \"Confirmar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Barcode, \"fIHo6ZqZ/Y2UkCllSC2o3BQGpU0=\");\n_c = Barcode;\nexport default Barcode;\nvar _c;\n$RefreshReg$(_c, \"Barcode\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Barcode","_s","excelData","setExcelData","inputBarcode","setInputBarcode","legicDB","setLegicDB","registeredLegicData","setRegisteredLegicData","exportButtonDisplay","setExportButtonDisplay","checkDb","getLocalStorage","localStorage","getItem","handleBarcodeInput","barcode","userData","undefined","doubleVerify","filter","data","length","alert","legicDBCopy","push","setItem","JSON","stringify","getJsonArray","jsonConvert","parse","formatJson","reduce","acc","current","getUserToStatus","legicStatus","children","className","type","placeholder","onChange","e","setInputLegic","target","value","inputLegic","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleConfirm","_c","$RefreshReg$"],"sources":["C:/Users/DuaTo/Downloads/Geberactiv-main1/src/components/barcode/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nfunction Barcode(){\r\n    const [excelData, setExcelData] = useState(null);\r\n    const [inputBarcode, setInputBarcode] = useState('');\r\n    const [legicDB, setLegicDB] = useState([]);\r\n    const [registeredLegicData, setRegisteredLegicData] = useState(true);\r\n    const [exportButtonDisplay, setExportButtonDisplay] = useState(false);\r\n     useEffect(() => {\r\n        checkDb();\r\n      }, []);\r\n    \r\n      function checkDb() {\r\n        let getLocalStorage = localStorage.getItem('gactiveLegicReadData');\r\n        if (getLocalStorage) {\r\n          setExportButtonDisplay(true);\r\n        }\r\n      }\r\n      function handleBarcodeInput(barcode) {\r\n         if (excelData !== null) {\r\n           let userData = excelData[barcode];\r\n     \r\n           if (userData !== undefined && userData !== null) {\r\n             let doubleVerify = legicDB.filter(data => data[2] === barcode);\r\n             if (doubleVerify.length > 0) {\r\n               alert('Este utilizador já foi registado');\r\n               setInputBarcode('');\r\n             } else {\r\n               const legicDBCopy = [...legicDB];\r\n               legicDBCopy.push(userData);\r\n               setLegicDB(legicDBCopy);\r\n               setRegisteredLegicData(true);\r\n               localStorage.setItem('gactiveLegicReadData', JSON.stringify(legicDBCopy));\r\n               let getJsonArray = localStorage.getItem('gactiveImportedData');\r\n               let jsonConvert = JSON.parse(getJsonArray);\r\n               let formatJson = jsonConvert.reduce((acc, current) => {\r\n                 return { ...acc, ...{ [current[2]]: current } };\r\n               }, {});\r\n               let getUserToStatus = formatJson[barcode];\r\n               delete jsonConvert[barcode];\r\n               getUserToStatus.push('check_circle');\r\n               const legicStatus = [...jsonConvert];\r\n               localStorage.setItem('gactiveImportedData', JSON.stringify(legicStatus));\r\n               checkDb();\r\n               setInputBarcode('');\r\n             }\r\n           } else {\r\n             alert('Este código de barras não existe');\r\n             setInputBarcode('');\r\n           }\r\n         } else {\r\n           alert('Importe um ficheiro');\r\n           setInputBarcode('');\r\n         }\r\n       }\r\n    return(\r\n        <><input className='legic-number-input' type='number' placeholder='Legic' onChange={(e) => setInputLegic(e.target.value)} value={inputLegic} autoFocus></input>\r\n        <p>\r\n          Introduza o seu Código de Barras\r\n        </p>\r\n        <input className='barcode-input' type='number' placeholder='Código de Barras' onChange={(e) => setInputBarcode(e.target.value)} value={inputBarcode}></input>\r\n        <button className='confirm-button' onClick={handleConfirm}>Confirmar</button>\r\n      </>\r\n    )\r\n}\r\nexport default Barcode;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}