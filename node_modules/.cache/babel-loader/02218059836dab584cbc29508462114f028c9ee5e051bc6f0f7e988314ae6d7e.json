{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DuaTo\\\\Downloads\\\\Geberactiv-main1\\\\src\\\\components\\\\legic\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Legic({\n  excelData,\n  legicDB,\n  setLegicDB,\n  showMessage\n}) {\n  _s();\n  const [inputLegic, setInputLegic] = useState('');\n  function handleLegicInput(legic) {\n    if (excelData !== null) {\n      let userData = excelData[legic];\n      if (userData !== undefined && userData !== null) {\n        let doubleVerify = legicDB.filter(data => data[2] === legic);\n        if (doubleVerify.length > 0) {\n          alert('Este utilizador já foi registado');\n          setInputLegic('');\n        } else {\n          const legicDBCopy = [...legicDB];\n          legicDBCopy.push(userData);\n          setLegicDB(legicDBCopy);\n          localStorage.setItem('gactiveLegicReadData', JSON.stringify(legicDBCopy));\n          let getJsonArray = localStorage.getItem('gactiveImportedData');\n          let jsonConvert = JSON.parse(getJsonArray);\n          let formatJson = jsonConvert.reduce((acc, current) => {\n            return {\n              ...acc,\n              ...{\n                [current[2]]: current\n              }\n            };\n          }, {});\n          let getUserToStatus = formatJson[legic];\n          delete jsonConvert[legic];\n          getUserToStatus.push('check_circle');\n          localStorage.setItem('gactiveImportedData', JSON.stringify(jsonConvert));\n          setInputLegic('');\n          showMessage(\"Código de barras inserido com sucesso!\");\n        }\n      } else {\n        alert('Este código de barras não existe');\n        setInputLegic('');\n      }\n    } else {\n      alert('Importe um ficheiro');\n      setInputLegic('');\n    }\n  }\n  function handleConfirm() {\n    if (inputLegic.length === 6) {\n      handleLegicInput(inputLegic);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Introduza o seu N\\xFAmero de Legic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"legic-number-input\",\n      type: \"number\",\n      placeholder: \"Legic\",\n      onChange: e => setInputLegic(e.target.value),\n      value: inputLegic,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"confirm-button\",\n      onClick: () => handleLegicInput(inputLegic),\n      children: \"Confirmar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Legic, \"98h/XBGdneYVkrmLVK5BWYIYD+Y=\");\n_c = Legic;\nexport default Legic;\nvar _c;\n$RefreshReg$(_c, \"Legic\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Legic","excelData","legicDB","setLegicDB","showMessage","_s","inputLegic","setInputLegic","handleLegicInput","legic","userData","undefined","doubleVerify","filter","data","length","alert","legicDBCopy","push","localStorage","setItem","JSON","stringify","getJsonArray","getItem","jsonConvert","parse","formatJson","reduce","acc","current","getUserToStatus","handleConfirm","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","e","target","value","autoFocus","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DuaTo/Downloads/Geberactiv-main1/src/components/legic/index.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction Legic({ excelData, legicDB, setLegicDB, showMessage }) {\r\n  const [inputLegic, setInputLegic] = useState('');\r\n\r\n  function handleLegicInput(legic) {\r\n    if (excelData !== null) {\r\n      let userData = excelData[legic];\r\n\r\n      if (userData !== undefined && userData !== null) {\r\n        let doubleVerify = legicDB.filter(data => data[2] === legic);\r\n        if (doubleVerify.length > 0) {\r\n          alert('Este utilizador já foi registado');\r\n          setInputLegic('');\r\n        } else {\r\n          const legicDBCopy = [...legicDB];\r\n          legicDBCopy.push(userData);\r\n          setLegicDB(legicDBCopy);\r\n          localStorage.setItem('gactiveLegicReadData', JSON.stringify(legicDBCopy));\r\n\r\n          let getJsonArray = localStorage.getItem('gactiveImportedData');\r\n          let jsonConvert = JSON.parse(getJsonArray);\r\n          let formatJson = jsonConvert.reduce((acc, current) => {\r\n            return { ...acc, ...{ [current[2]]: current } };\r\n          }, {});\r\n\r\n          let getUserToStatus = formatJson[legic];\r\n          delete jsonConvert[legic];\r\n          getUserToStatus.push('check_circle');\r\n\r\n          localStorage.setItem('gactiveImportedData', JSON.stringify(jsonConvert));\r\n          setInputLegic('');\r\n          showMessage(\"Código de barras inserido com sucesso!\");\r\n        }\r\n      } else {\r\n        alert('Este código de barras não existe');\r\n        setInputLegic('');\r\n      }\r\n    } else {\r\n      alert('Importe um ficheiro');\r\n      setInputLegic('');\r\n    }\r\n  }\r\n\r\n  function handleConfirm() {\r\n    if (inputLegic.length === 6) {\r\n      handleLegicInput(inputLegic);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <p>Introduza o seu Número de Legic</p>\r\n      <input \r\n        className='legic-number-input' \r\n        type='number' \r\n        placeholder='Legic' \r\n        onChange={(e) => setInputLegic(e.target.value)} \r\n        value={inputLegic} \r\n        autoFocus\r\n      />\r\n      <button className='confirm-button' onClick={() => handleLegicInput(inputLegic)}>\r\n        Confirmar\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Legic;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}