{"ast":null,"code":"import*as XLSX from'xlsx';import{useState}from'react';import'../importar/ajuda.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Importar(_ref){let{setExcelData,setDataToFilter,setExcelTableData,showMessage,setTotalEntries}=_ref;const[isModalOpen,setIsModalOpen]=useState(false);const handleFileUpload=e=>{const file=e.target.files[0];if(file){readExcel(file);}};const readExcel=file=>{const reader=new FileReader();reader.onload=e=>{const data=e.target.result;const workbook=XLSX.read(data,{type:'binary'});const sheetName=workbook.SheetNames[0];const sheet=workbook.Sheets[sheetName];const jsonData=XLSX.utils.sheet_to_json(sheet,{header:1});jsonData.shift();let defineLegicKey=jsonData.reduce((acc,current)=>{return{...acc,[current[2]]:current};},{});let formatToFilter=jsonData.reduce((acc,current)=>{return{...acc,[current[0]]:current};},{});setTotalEntries(jsonData.length);localStorage.setItem('gactiveImportedData',JSON.stringify(jsonData));setExcelData(defineLegicKey);setDataToFilter(formatToFilter);setExcelTableData(true);showMessage(\"Ficheiro importado com sucesso!\");};reader.readAsBinaryString(file);};const openModal=()=>setIsModalOpen(true);const closeModal=()=>setIsModalOpen(false);return/*#__PURE__*/_jsxs(\"section\",{className:\"files-management-container\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Importar Ficheiros\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileUpload}),/*#__PURE__*/_jsx(\"i\",{onClick:openModal,className:\"fa fa-question-circle open-modal-icon\"}),isModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Ajuda Importa\\xE7\\xE3o de Ficheiro\"}),/*#__PURE__*/_jsx(\"p\",{children:\"- Aqui podes importar um ficheiro Excel contendo os c\\xF3digos de barras ou Legic!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"- Lembra-te de que o ficheiro deve conter o Codigo de barras ou legic na 3 coluna para ser lido com sucesso!\"}),/*#__PURE__*/_jsx(\"img\",{src:\"ajuda.png\",alt:\"Imagem de Ajuda\",className:\"help-image\"}),/*#__PURE__*/_jsx(\"button\",{onClick:closeModal,className:\"close-modal-button\",children:\"Fechar\"})]})})]});}export default Importar;","map":{"version":3,"names":["XLSX","useState","jsx","_jsx","jsxs","_jsxs","Importar","_ref","setExcelData","setDataToFilter","setExcelTableData","showMessage","setTotalEntries","isModalOpen","setIsModalOpen","handleFileUpload","e","file","target","files","readExcel","reader","FileReader","onload","data","result","workbook","read","type","sheetName","SheetNames","sheet","Sheets","jsonData","utils","sheet_to_json","header","shift","defineLegicKey","reduce","acc","current","formatToFilter","length","localStorage","setItem","JSON","stringify","readAsBinaryString","openModal","closeModal","className","children","onChange","onClick","src","alt"],"sources":["C:/Users/DuaTo/GeberActiv/src/components/importar/index.js"],"sourcesContent":["import * as XLSX from 'xlsx';\r\nimport { useState } from 'react';\r\nimport '../importar/ajuda.png'\r\nfunction Importar({ setExcelData, setDataToFilter, setExcelTableData, showMessage, setTotalEntries }) {\r\n  const [isModalOpen, setIsModalOpen] = useState(false); \r\n\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      readExcel(file);\r\n    }\r\n  };\r\n  const readExcel = (file) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n      const data = e.target.result;\r\n      const workbook = XLSX.read(data, { type: 'binary' });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const sheet = workbook.Sheets[sheetName];\r\n\r\n      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n      jsonData.shift();\r\n\r\n      let defineLegicKey = jsonData.reduce((acc, current) => {\r\n        return { ...acc, [current[2]]: current };\r\n      }, {});\r\n\r\n      let formatToFilter = jsonData.reduce((acc, current) => {\r\n        return { ...acc, [current[0]]: current };\r\n      }, {});\r\n      setTotalEntries(jsonData.length);\r\n\r\n      localStorage.setItem('gactiveImportedData', JSON.stringify(jsonData));\r\n      setExcelData(defineLegicKey);\r\n      setDataToFilter(formatToFilter);\r\n      setExcelTableData(true);\r\n      showMessage(\"Ficheiro importado com sucesso!\");\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  const openModal = () => setIsModalOpen(true);\r\n  const closeModal = () => setIsModalOpen(false);\r\n\r\n  return (\r\n    <section className='files-management-container'>\r\n      <p>Importar Ficheiros</p>\r\n      <input type='file' onChange={handleFileUpload} />\r\n\r\n      {}\r\n      <i onClick={openModal} className=\"fa fa-question-circle open-modal-icon\" />\r\n\r\n      {}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h2>Ajuda Importação de Ficheiro</h2>\r\n            <p>- Aqui podes importar um ficheiro Excel contendo os códigos de barras ou Legic!</p>\r\n            <p>- Lembra-te de que o ficheiro deve conter o Codigo de barras ou legic na 3 coluna para ser lido com sucesso!</p>\r\n            <img src=\"ajuda.png\" alt=\"Imagem de Ajuda\"className=\"help-image\"\r\n            />\r\n            <button onClick={closeModal} className=\"close-modal-button\">\r\n              Fechar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Importar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}