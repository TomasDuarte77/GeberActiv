{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DuaTo\\\\Downloads\\\\Geberactiv-main1\\\\src\\\\components\\\\limpar\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Limpar() {\n  _s();\n  const [isCleaning, setIsCleaning] = useState(false);\n  const limparDados = () => {\n    setIsCleaning(true);\n\n    // Limpar os dados do localStorage\n    localStorage.removeItem('gactiveImportedData');\n    localStorage.removeItem('legicCount');\n    localStorage.removeItem('barcodeCount');\n    localStorage.removeItem('gactiveLegicReadData');\n\n    // Atraso para garantir que a limpeza seja feita antes de atualizar o estado\n    setTimeout(() => {\n      // Aqui, você pode forçar o recarregamento da página ou reconfigurar o estado\n      window.location.reload();\n    }, 500); // Atraso de meio segundo para simular limpeza\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"limpar-container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"clean-button\",\n      onClick: limparDados,\n      children: isCleaning ? \"Limpando...\" : \"Limpar Tudo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Limpar, \"frANcxVt40GchZAEOmBvzH/Aklg=\");\n_c = Limpar;\nvar _c;\n$RefreshReg$(_c, \"Limpar\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Limpar","_s","isCleaning","setIsCleaning","limparDados","localStorage","removeItem","setTimeout","window","location","reload","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DuaTo/Downloads/Geberactiv-main1/src/components/limpar/index.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function Limpar() {\r\n    const [isCleaning, setIsCleaning] = useState(false);\r\n\r\n    const limparDados = () => {\r\n        setIsCleaning(true);\r\n\r\n        // Limpar os dados do localStorage\r\n        localStorage.removeItem('gactiveImportedData');\r\n        localStorage.removeItem('legicCount');\r\n        localStorage.removeItem('barcodeCount');\r\n        localStorage.removeItem('gactiveLegicReadData');\r\n\r\n        // Atraso para garantir que a limpeza seja feita antes de atualizar o estado\r\n        setTimeout(() => {\r\n            // Aqui, você pode forçar o recarregamento da página ou reconfigurar o estado\r\n            window.location.reload();\r\n        }, 500); // Atraso de meio segundo para simular limpeza\r\n    };\r\n\r\n    return (\r\n        <section className=\"limpar-container\">\r\n            <button className=\"clean-button\" onClick={limparDados}>\r\n                {isCleaning ? \"Limpando...\" : \"Limpar Tudo\"}\r\n            </button>\r\n        </section>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACtBD,aAAa,CAAC,IAAI,CAAC;;IAEnB;IACAE,YAAY,CAACC,UAAU,CAAC,qBAAqB,CAAC;IAC9CD,YAAY,CAACC,UAAU,CAAC,YAAY,CAAC;IACrCD,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC;IACvCD,YAAY,CAACC,UAAU,CAAC,sBAAsB,CAAC;;IAE/C;IACAC,UAAU,CAAC,MAAM;MACb;MACAC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC5B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACb,CAAC;EAED,oBACIX,OAAA;IAASY,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eACjCb,OAAA;MAAQY,SAAS,EAAC,cAAc;MAACE,OAAO,EAAET,WAAY;MAAAQ,QAAA,EACjDV,UAAU,GAAG,aAAa,GAAG;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAElB;AAAChB,EAAA,CA1BuBD,MAAM;AAAAkB,EAAA,GAANlB,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}