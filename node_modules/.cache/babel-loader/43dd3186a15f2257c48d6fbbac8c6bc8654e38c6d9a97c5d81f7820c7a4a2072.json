{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DuaTo\\\\Downloads\\\\Geberactiv-main1\\\\src\\\\components\\\\barcode\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Barcode({\n  excelData,\n  legicDB,\n  setLegicDB,\n  showMessage\n}) {\n  _s();\n  const [inputBarcode, setInputBarcode] = useState('');\n  function handleBarcodeInput(barcode) {\n    if (excelData !== null) {\n      let userData = excelData[barcode];\n      if (userData !== undefined && userData !== null) {\n        let doubleVerify = legicDB.filter(data => data[2] === barcode);\n        if (doubleVerify.length > 0) {\n          showMessage('Este utilizador já foi registado', 'error');\n          setInputBarcode('');\n        } else {\n          const legicDBCopy = [...legicDB];\n          legicDBCopy.push(userData);\n          setLegicDB(legicDBCopy);\n          localStorage.setItem('gactiveLegicReadData', JSON.stringify(legicDBCopy));\n          let getJsonArray = localStorage.getItem('gactiveImportedData');\n          let jsonConvert = JSON.parse(getJsonArray);\n          let formatJson = jsonConvert.reduce((acc, current) => {\n            return {\n              ...acc,\n              ...{\n                [current[2]]: current\n              }\n            };\n          }, {});\n          let getUserToStatus = formatJson[barcode];\n          delete jsonConvert[barcode];\n          getUserToStatus.push('check_circle');\n          localStorage.setItem('gactiveImportedData', JSON.stringify(jsonConvert));\n          setInputBarcode('');\n          showMessage('Código de barras inserido com sucesso!', 'success');\n        }\n      } else {\n        showMessage('Este código de barras não existe', 'error');\n        setInputBarcode('');\n      }\n    } else {\n      showMessage('Importe um ficheiro', 'alert');\n      setInputBarcode('');\n    }\n  }\n  function handleConfirm() {\n    if (inputBarcode.length === 8) {\n      handleBarcodeInput(inputBarcode);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Introduza o seu C\\xF3digo de Barras\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"barcode-input\",\n      type: \"number\",\n      placeholder: \"C\\xF3digo de Barras\",\n      onChange: e => setInputBarcode(e.target.value),\n      value: inputBarcode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"confirm-button\",\n      onClick: handleConfirm,\n      children: \"Confirmar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Barcode, \"xxRFWmi51cqtjYJdmDvkdbK1LSE=\");\n_c = Barcode;\nexport default Barcode;\nvar _c;\n$RefreshReg$(_c, \"Barcode\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Barcode","excelData","legicDB","setLegicDB","showMessage","_s","inputBarcode","setInputBarcode","handleBarcodeInput","barcode","userData","undefined","doubleVerify","filter","data","length","legicDBCopy","push","localStorage","setItem","JSON","stringify","getJsonArray","getItem","jsonConvert","parse","formatJson","reduce","acc","current","getUserToStatus","handleConfirm","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DuaTo/Downloads/Geberactiv-main1/src/components/barcode/index.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './App.css';\r\nfunction Barcode({ excelData, legicDB, setLegicDB, showMessage }) {\r\n  const [inputBarcode, setInputBarcode] = useState('');\r\n\r\n  function handleBarcodeInput(barcode) {\r\n    if (excelData !== null) {\r\n      let userData = excelData[barcode];\r\n\r\n      if (userData !== undefined && userData !== null) {\r\n        let doubleVerify = legicDB.filter(data => data[2] === barcode);\r\n        if (doubleVerify.length > 0) {\r\n          showMessage('Este utilizador já foi registado', 'error');\r\n          setInputBarcode('');\r\n        } else {\r\n          const legicDBCopy = [...legicDB];\r\n          legicDBCopy.push(userData);\r\n          setLegicDB(legicDBCopy);\r\n          localStorage.setItem('gactiveLegicReadData', JSON.stringify(legicDBCopy));\r\n\r\n          let getJsonArray = localStorage.getItem('gactiveImportedData');\r\n          let jsonConvert = JSON.parse(getJsonArray);\r\n          let formatJson = jsonConvert.reduce((acc, current) => {\r\n            return { ...acc, ...{ [current[2]]: current } };\r\n          }, {});\r\n\r\n          let getUserToStatus = formatJson[barcode];\r\n          delete jsonConvert[barcode];\r\n          getUserToStatus.push('check_circle');\r\n\r\n          localStorage.setItem('gactiveImportedData', JSON.stringify(jsonConvert));\r\n          setInputBarcode('');\r\n          showMessage('Código de barras inserido com sucesso!', 'success');\r\n        }\r\n      } else {\r\n        showMessage('Este código de barras não existe', 'error');\r\n        setInputBarcode('');\r\n      }\r\n    } else {\r\n      showMessage('Importe um ficheiro', 'alert');\r\n      setInputBarcode('');\r\n    }\r\n  }\r\n\r\n  function handleConfirm() {\r\n    if (inputBarcode.length === 8) {\r\n      handleBarcodeInput(inputBarcode);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Introduza o seu Código de Barras</p>\r\n      <input \r\n        className='barcode-input' \r\n        type='number' \r\n        placeholder='Código de Barras' \r\n        onChange={(e) => setInputBarcode(e.target.value)} \r\n        value={inputBarcode}\r\n      />\r\n      <button className='confirm-button' onClick={handleConfirm}>Confirmar</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Barcode;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}