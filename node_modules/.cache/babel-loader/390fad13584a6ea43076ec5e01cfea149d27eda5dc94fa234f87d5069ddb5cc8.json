{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DuaTo\\\\Downloads\\\\Geberactiv-main1\\\\src\\\\components\\\\importar\\\\index.js\";\nimport * as XLSX from 'xlsx';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Importar({\n  setExcelData,\n  setDataToFilter,\n  setExcelTableData,\n  showMessage,\n  setTotalEntries\n}) {\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      readExcel(file);\n    }\n  };\n  const readExcel = file => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = e.target.result;\n      const workbook = XLSX.read(data, {\n        type: 'binary'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(sheet, {\n        header: 1\n      });\n      jsonData.shift();\n      let defineLegicKey = jsonData.reduce((acc, current) => {\n        return {\n          ...acc,\n          [current[2]]: current\n        };\n      }, {});\n      let formatToFilter = jsonData.reduce((acc, current) => {\n        return {\n          ...acc,\n          [current[0]]: current\n        };\n      }, {});\n      setTotalEntries(jsonData.length);\n      localStorage.setItem('gactiveImportedData', JSON.stringify(jsonData));\n      setExcelData(defineLegicKey);\n      setDataToFilter(formatToFilter);\n      setExcelTableData(true);\n      showMessage(\"Ficheiro importado com sucesso!\");\n    };\n    reader.readAsBinaryString(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"files-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Importar Ficheiros\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c = Importar;\nexport default Importar;\nvar _c;\n$RefreshReg$(_c, \"Importar\");","map":{"version":3,"names":["XLSX","useState","jsxDEV","_jsxDEV","Importar","setExcelData","setDataToFilter","setExcelTableData","showMessage","setTotalEntries","handleFileUpload","e","file","target","files","readExcel","reader","FileReader","onload","data","result","workbook","read","type","sheetName","SheetNames","sheet","Sheets","jsonData","utils","sheet_to_json","header","shift","defineLegicKey","reduce","acc","current","formatToFilter","length","localStorage","setItem","JSON","stringify","readAsBinaryString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["C:/Users/DuaTo/Downloads/Geberactiv-main1/src/components/importar/index.js"],"sourcesContent":["import * as XLSX from 'xlsx';\r\nimport { useState } from 'react';\r\n\r\nfunction Importar({ setExcelData, setDataToFilter, setExcelTableData, showMessage, setTotalEntries }) {\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      readExcel(file);\r\n    }\r\n  };\r\n\r\n  const readExcel = (file) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (e) => {\r\n      const data = e.target.result;\r\n      const workbook = XLSX.read(data, { type: 'binary' });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const sheet = workbook.Sheets[sheetName];\r\n\r\n      const jsonData = XLSX.utils.sheet_to_json(sheet, { header: 1 });\r\n      jsonData.shift();\r\n\r\n      let defineLegicKey = jsonData.reduce((acc, current) => {\r\n        return { ...acc, [current[2]]: current };\r\n      }, {});\r\n\r\n      let formatToFilter = jsonData.reduce((acc, current) => {\r\n        return { ...acc, [current[0]]: current };\r\n      }, {});\r\n      setTotalEntries(jsonData.length);\r\n\r\n      localStorage.setItem('gactiveImportedData', JSON.stringify(jsonData));\r\n      setExcelData(defineLegicKey);\r\n      setDataToFilter(formatToFilter);\r\n      setExcelTableData(true);\r\n      showMessage(\"Ficheiro importado com sucesso!\");\r\n    };\r\n\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  return (\r\n    <section className='files-management-container'>\r\n      <p>Importar Ficheiros</p>\r\n      <input type='file' onChange={handleFileUpload} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Importar;\r\n"],"mappings":";AAAA,OAAO,KAAKA,IAAI,MAAM,MAAM;AAC5B,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,QAAQA,CAAC;EAAEC,YAAY;EAAEC,eAAe;EAAEC,iBAAiB;EAAEC,WAAW;EAAEC;AAAgB,CAAC,EAAE;EACpG,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAIF,IAAI,EAAE;MACRG,SAAS,CAACH,IAAI,CAAC;IACjB;EACF,CAAC;EAED,MAAMG,SAAS,GAAIH,IAAI,IAAK;IAC1B,MAAMI,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAE/BD,MAAM,CAACE,MAAM,GAAIP,CAAC,IAAK;MACrB,MAAMQ,IAAI,GAAGR,CAAC,CAACE,MAAM,CAACO,MAAM;MAC5B,MAAMC,QAAQ,GAAGrB,IAAI,CAACsB,IAAI,CAACH,IAAI,EAAE;QAAEI,IAAI,EAAE;MAAS,CAAC,CAAC;MACpD,MAAMC,SAAS,GAAGH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC;MACxC,MAAMC,KAAK,GAAGL,QAAQ,CAACM,MAAM,CAACH,SAAS,CAAC;MAExC,MAAMI,QAAQ,GAAG5B,IAAI,CAAC6B,KAAK,CAACC,aAAa,CAACJ,KAAK,EAAE;QAAEK,MAAM,EAAE;MAAE,CAAC,CAAC;MAC/DH,QAAQ,CAACI,KAAK,CAAC,CAAC;MAEhB,IAAIC,cAAc,GAAGL,QAAQ,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;QACrD,OAAO;UAAE,GAAGD,GAAG;UAAE,CAACC,OAAO,CAAC,CAAC,CAAC,GAAGA;QAAQ,CAAC;MAC1C,CAAC,EAAE,CAAC,CAAC,CAAC;MAEN,IAAIC,cAAc,GAAGT,QAAQ,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;QACrD,OAAO;UAAE,GAAGD,GAAG;UAAE,CAACC,OAAO,CAAC,CAAC,CAAC,GAAGA;QAAQ,CAAC;MAC1C,CAAC,EAAE,CAAC,CAAC,CAAC;MACN3B,eAAe,CAACmB,QAAQ,CAACU,MAAM,CAAC;MAEhCC,YAAY,CAACC,OAAO,CAAC,qBAAqB,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ,CAAC,CAAC;MACrEvB,YAAY,CAAC4B,cAAc,CAAC;MAC5B3B,eAAe,CAAC+B,cAAc,CAAC;MAC/B9B,iBAAiB,CAAC,IAAI,CAAC;MACvBC,WAAW,CAAC,iCAAiC,CAAC;IAChD,CAAC;IAEDQ,MAAM,CAAC2B,kBAAkB,CAAC/B,IAAI,CAAC;EACjC,CAAC;EAED,oBACET,OAAA;IAASyC,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBAC7C1C,OAAA;MAAA0C,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACzB9C,OAAA;MAAOoB,IAAI,EAAC,MAAM;MAAC2B,QAAQ,EAAExC;IAAiB;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEd;AAACE,EAAA,GA7CQ/C,QAAQ;AA+CjB,eAAeA,QAAQ;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}